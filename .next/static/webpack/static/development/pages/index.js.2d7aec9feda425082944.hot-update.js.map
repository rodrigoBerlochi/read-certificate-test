{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2d7aec9feda425082944.hot-update.js","sources":["webpack:///./components/FileInput.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport {Input} from './Input';\r\n\r\n/**\r\n * \r\n */\r\nexport class FileInput extends React.Component{\r\n    \r\n    static EnumReadingsType = {\r\n        text: 'readAsText',\r\n        binaryString: 'readAsBinaryString',\r\n        arrayBuffer: 'readAsArrayBuffer',\r\n        dataURL: 'readAsDataURL'\r\n    } \r\n\r\n    state = {\r\n        isFileAPISupported: true\r\n    }\r\n    \r\n    reader = null;\r\n\r\n    componentDidMount () {\r\n        if (!(window.File &&\r\n            window.FileReader &&\r\n            window.FileList &&\r\n            window.Blob)) {\r\n                this.setState({\r\n                    isFileAPISupported: false\r\n                });\r\n\r\n                return;\r\n        }\r\n\r\n        this.reader = new FileReader();\r\n\r\n    }\r\n\r\n    onFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        this.reader.onload = (e) => {\r\n            const result = e.currentTarget.result;\r\n            this.props.getResult(result);\r\n        };\r\n\r\n        this.reader.onprogress = (e) => {\r\n            const pgs = Math.round((e.loaded / e.total) * 100);\r\n        };\r\n\r\n        this.reader[this.props.readingType](file);\r\n    }\r\n\r\n    render () {\r\n        const {isFileAPISupported, progress} = this.state;\r\n        const {messageNoBrowserSupport} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                isFileAPISupported ? <Input\r\n                    id={this.props.id}\r\n                    type={'file'}\r\n                    onInputChange={this.onFileInputChange}\r\n                /> : messageNoBrowserSupport\r\n                <progress max={100} value={progress}></progress>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst readings = Object.values(FileInput.EnumReadingsType);\r\n\r\nFileInput.propsTypes = {\r\n    messageNoBrowserSupport: PropsTypes.string,\r\n    getResult: PropsTypes.func.isRequired,\r\n    readingType: PropsTypes.oneOf(readings).isRequired\r\n}\r\n\r\nFileInput.defaultProps = {\r\n    messageNoBrowserSupport: 'Your browser has no support for Uploading Files. Use another browser.',\r\n    getResult: (val) => {\r\n        console.log(val);\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAUA;AADA;AACA;AAVA;AACA;AADA;AAgCA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AAIA;AACA;AADA;AAIA;AACA;AACA;AACA;AAEA;AA7BA;AAAA;AAAA;AA8CA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA5DA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAJA;AACA;AA4DA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;;;;A","sourceRoot":""}